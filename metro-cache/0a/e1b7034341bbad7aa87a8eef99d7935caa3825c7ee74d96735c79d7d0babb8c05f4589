{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":54,"column":0}},{"start":{"line":1,"column":0},"end":{"line":54,"column":0}}]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":54,"column":0}}]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":54,"column":0}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var linkProviderId = 'emailLink';\n  var passwordProviderId = 'password';\n\n  var EmailAuthProvider = function () {\n    function EmailAuthProvider() {\n      (0, _classCallCheck2.default)(this, EmailAuthProvider);\n      throw new Error('`new EmailAuthProvider()` is not supported on the native Firebase SDKs.');\n    }\n\n    (0, _createClass2.default)(EmailAuthProvider, null, [{\n      key: \"EMAIL_LINK_SIGN_IN_METHOD\",\n      get: function get() {\n        return linkProviderId;\n      }\n    }, {\n      key: \"EMAIL_PASSWORD_SIGN_IN_METHOD\",\n      get: function get() {\n        return passwordProviderId;\n      }\n    }, {\n      key: \"PROVIDER_ID\",\n      get: function get() {\n        return passwordProviderId;\n      }\n    }, {\n      key: \"credential\",\n      value: function credential(email, password) {\n        return {\n          token: email,\n          secret: password,\n          providerId: passwordProviderId\n        };\n      }\n    }, {\n      key: \"credentialWithLink\",\n      value: function credentialWithLink(email, emailLink) {\n        return {\n          token: email,\n          secret: emailLink,\n          providerId: linkProviderId\n        };\n      }\n    }]);\n    return EmailAuthProvider;\n  }();\n\n  exports.default = EmailAuthProvider;\n});","lineCount":58,"map":[[11,0,18,0],[11,6,18,6,"linkProviderId"],[11,20,18,20],[11,23,18,23],[11,34,18,0],[12,0,19,0],[12,6,19,6,"passwordProviderId"],[12,24,19,24],[12,27,19,27],[12,37,19,0],[14,6,21,21,"EmailAuthProvider"],[14,23],[15,0,22,2],[15,33,22,16],[16,0,22,16],[17,0,23,4],[17,12,23,10],[17,16,23,14,"Error"],[17,21,23,10],[17,22,23,20],[17,95,23,10],[17,96,23,4],[18,0,24,3],[22,11,26,2],[22,26,26,41],[23,0,27,4],[23,15,27,11,"linkProviderId"],[23,29,27,4],[24,0,28,3],[27,11,30,2],[27,26,30,45],[28,0,31,4],[28,15,31,11,"passwordProviderId"],[28,33,31,4],[29,0,32,3],[32,11,34,2],[32,26,34,27],[33,0,35,4],[33,15,35,11,"passwordProviderId"],[33,33,35,4],[34,0,36,3],[37,13,38,2],[37,33,38,20,"email"],[37,38,38,2],[37,40,38,27,"password"],[37,48,38,2],[37,50,38,37],[38,0,39,4],[38,15,39,11],[39,0,40,6,"token"],[39,10,40,6,"token"],[39,15,40,11],[39,17,40,13,"email"],[39,22,39,11],[40,0,41,6,"secret"],[40,10,41,6,"secret"],[40,16,41,12],[40,18,41,14,"password"],[40,26,39,11],[41,0,42,6,"providerId"],[41,10,42,6,"providerId"],[41,20,42,16],[41,22,42,18,"passwordProviderId"],[42,0,39,11],[42,9,39,4],[43,0,44,3],[46,13,46,2],[46,41,46,28,"email"],[46,46,46,2],[46,48,46,35,"emailLink"],[46,57,46,2],[46,59,46,46],[47,0,47,4],[47,15,47,11],[48,0,48,6,"token"],[48,10,48,6,"token"],[48,15,48,11],[48,17,48,13,"email"],[48,22,47,11],[49,0,49,6,"secret"],[49,10,49,6,"secret"],[49,16,49,12],[49,18,49,14,"emailLink"],[49,27,47,11],[50,0,50,6,"providerId"],[50,10,50,6,"providerId"],[50,20,50,16],[50,22,50,18,"linkProviderId"],[51,0,47,11],[51,9,47,4],[52,0,52,3]],"functionMap":{"names":["<global>","EmailAuthProvider","constructor","get__EMAIL_LINK_SIGN_IN_METHOD","get__EMAIL_PASSWORD_SIGN_IN_METHOD","get__PROVIDER_ID","credential","credentialWithLink"],"mappings":"AAA;eCoB;ECC;GDE;EEE;GFE;EGE;GHE;EIE;GJE;EKE;GLM;EME;GNM;CDC"}},"type":"js/module"}]}